name: NPM publish CD workflow

on:
  pull_request:
    branches: [ master, dev, release-* ]
    types: [labeled]

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set major release
        if: contains(github.event.pull_request.labels.*.name, 'release-major')
        run: echo "RELEASE=major" >> $GITHUB_ENV
      - name: Set minor release
        if: contains(github.event.pull_request.labels.*.name, 'release-minor')
        run: echo "RELEASE=minor" >> $GITHUB_ENV
      - name: Set patch release
        if: contains(github.event.pull_request.labels.*.name, 'release-patch')
        run: echo "RELEASE=patch" >> $GITHUB_ENV

      - name: Set major prerelease
        if: contains(github.event.pull_request.labels.*.name, 'prerelease-major')
        run: echo "RELEASE=premajor" >> $GITHUB_ENV
      - name: Set minor prerelease
        if: contains(github.event.pull_request.labels.*.name, 'prerelease-minor')
        run: echo "RELEASE=preminor" >> $GITHUB_ENV
      - name: Set patch prerelease
        if: contains(github.event.pull_request.labels.*.name, 'prerelease-patch')
        run: echo "RELEASE=prepatch" >> $GITHUB_ENV

      - name: Set prerelease
        if: contains(github.event.pull_request.labels.*.name, 'prerelease')
        run: echo "RELEASE=prerelease" >> $GITHUB_ENV

      - name: Set preid prerelease
        if: contains(github.event.pull_request.labels.*.name, 'preid-*')
        run: echo "RELEASE=prerelease" >> $GITHUB_ENV

      - name: Check release env
        run: |
          if [[ -z "${{ env.RELEASE }}" ]];
          then
            echo "You need to set a release label on PRs to the master, dev branches"
            exit 1
          else
            echo ${{ env.RELEASE }}
            exit 0
          fi

  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        registry-url: https://registry.npmjs.org/
  
    - run: npm ci
    - run: npm run lint
    #- run: npm test
    - run: npm run build:all --if-present

    - name: Commit bundles
      run: |
        git config user.name 'Github CD'
        git config user.email 'gh-cd@github.com'
        git commit -m 'gh-cd: automated build' ./dist/*

    #  - run: npm version ${{ env.RELEASE }}

    #  - run: npm publish
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - run: git push
      env:
        # The secret is passed automatically. Nothing to configure.
        github-token: ${{ secrets.GITHUB_TOKEN }}
